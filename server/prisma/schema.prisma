datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Office {
  officeId            String     @id @default(uuid())
  officeName          String
  officeEmail         String     @unique
  officePassword      String
  officeContactNumber String?
  officeSubTitle      String?
  officeCity          String?
  officeState         String?
  officeCountry       String?
  officePincodes      String?
  officeLongitude     String?
  officeLatitude      String?
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  Employees           Employee[] @relation("OfficeToEmployee")
}

model Employee {
  employeeId              String         @id @default(uuid())
  employeeName            String
  employeeEmail           String         @unique
  employeeContactNumber   String
  employeePassword        String?
  employeeProfileImageUrl String?
  verificationCode        String?
  isVerified              Boolean?       @default(false)
  biometricEnabled        Boolean?       @default(false)
  roles                   EmployeeRole[]
  Attendances             Attendances[]  @relation("EmployeeToAttendance")
  office                  Office         @relation("OfficeToEmployee", fields: [officeId], references: [officeId])
  officeId                String
  createdAt               DateTime       @default(now())
  updatedAt               DateTime       @updatedAt
}

model Role {
  roleId    String         @id @default(uuid())
  roleName  String         @unique
  Employees EmployeeRole[]
}

model EmployeeRole {
  employeeId String
  roleId     String
  Employee   Employee @relation(fields: [employeeId], references: [employeeId])
  Role       Role     @relation(fields: [roleId], references: [roleId])

  @@id([employeeId, roleId])
}

model Attendances {
  attendanceId     String            @id @default(uuid())
  employee         Employee          @relation("EmployeeToAttendance", fields: [employeeId], references: [employeeId])
  employeeId       String
  date             DateTime          @default(now())
  checkInTime      DateTime?
  checkInLocation  String?
  checkOutTime     DateTime?
  checkOutLocation String?
  status           AttendanceStatus?
  totalHours       String?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
}

enum AttendanceStatus {
  CHECKED_IN
  CHECKED_OUT
  ABSENT
  ON_LEAVE
  HALF_DAY
}

enum ROLES {
  OFFICE
  REMOTE
}
